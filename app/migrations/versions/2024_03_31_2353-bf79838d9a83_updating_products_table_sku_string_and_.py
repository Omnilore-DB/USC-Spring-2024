"""updating products table, sku = string and unique

Revision ID: bf79838d9a83
Revises: 9cede2f5c10a
Create Date: 2024-03-31 23:53:10.095354

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "bf79838d9a83"
down_revision: Union[str, None] = "9cede2f5c10a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "products",
        "sku",
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        existing_nullable=False,
    )
    op.add_column(
        "orders",
        sa.Column("user_ids", postgresql.ARRAY(sa.String()), nullable=False),
    )
    op.add_column("orders", sa.Column("sku", sa.String(), nullable=False))
    op.add_column("orders", sa.Column("payment_method", sa.String(), nullable=True))
    op.add_column(
        "orders",
        sa.Column("foreign_transaction_id", sa.String(), nullable=True),
    )
    op.drop_constraint("fk_orders_user_id_users", "orders", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_orders_sku_products"),
        "orders",
        "products",
        ["sku"],
        ["sku"],
    )
    op.drop_column("orders", "method")
    op.drop_column("orders", "type")
    op.drop_column("orders", "stripe_paypal_id")
    op.drop_column("orders", "user_id")
    op.create_unique_constraint(op.f("uq_products_sku"), "products", ["sku"])
    op.alter_column(
        "users",
        "date_joined",
        existing_type=sa.DATE(),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "date_renewed",
        existing_type=sa.DATE(),
        type_=sa.DateTime(),
        existing_nullable=True,
    )
    op.drop_index("ix_users_id", table_name="users")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.drop_column("users", "emergency_contact")
    op.drop_column("users", "types")
    op.drop_column("users", "usps")
    op.drop_column("users", "date_expired")
    op.drop_column("users", "emergency_phone")
    op.drop_column("users", "id")
    op.drop_column("users", "status")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            primary_key=True,
            unique=True,
        ),
    )
    op.add_column(
        "users",
        sa.Column("emergency_phone", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("date_expired", sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("usps", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("types", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column(
            "emergency_contact",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.alter_column(
        "users",
        "date_renewed",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "date_joined",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=True,
    )
    op.drop_constraint(op.f("uq_products_sku"), "products", type_="unique")
    op.add_column(
        "orders",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "orders",
        sa.Column("stripe_paypal_id", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "orders",
        sa.Column("type", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "orders",
        sa.Column("method", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(op.f("fk_orders_sku_products"), "orders", type_="foreignkey")
    op.create_foreign_key(
        "fk_orders_user_id_users",
        "orders",
        "users",
        ["user_id"],
        ["id"],
    )
    op.drop_column("orders", "foreign_transaction_id")
    op.drop_column("orders", "payment_method")
    op.drop_column("orders", "sku")
    op.drop_column("orders", "user_ids")
    # op.alter_column('products', 'sku',
    #            existing_type=sa.String(),
    #            type_=sa.INTEGER(),
    #            existing_nullable=False)
    # ### end Alembic commands ###
