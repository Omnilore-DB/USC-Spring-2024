"""fixing users pk

Revision ID: 2733d36c58cf
Revises: 239c70580796
Create Date: 2024-04-08 13:44:45.063291

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2733d36c58cf"
down_revision: Union[str, None] = "239c70580796"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "orders", sa.Column("skus", postgresql.ARRAY(sa.String()), nullable=False)
    )
    op.drop_constraint("fk_orders_sku_products", "orders", type_="foreignkey")
    op.drop_column("orders", "sku")
    op.create_unique_constraint(op.f("uq_tracking_cursor"), "tracking", ["cursor"])
    op.add_column("users", sa.Column("pk", sa.String(), nullable=False))
    op.drop_index("ix_users_email", table_name="users")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=False)
    op.create_index(op.f("ix_users_pk"), "users", ["pk"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_pk"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_index("ix_users_email", "users", ["email"], unique=True)
    op.drop_column("users", "pk")
    op.drop_constraint(op.f("uq_tracking_cursor"), "tracking", type_="unique")
    op.add_column(
        "orders", sa.Column("sku", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.create_foreign_key(
        "fk_orders_sku_products", "orders", "products", ["sku"], ["sku"]
    )
    op.drop_column("orders", "skus")
    # ### end Alembic commands ###
